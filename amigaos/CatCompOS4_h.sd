/*
 * This file is part of MPlayer.
 *
 * MPlayer is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * MPlayer is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with MPlayer; if not, write to the Free Software Foundation, Inc.,
 * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
 */

##rem $Id$
##stringtype C
##shortstrings

/****************************************************************

   This file was created automatically by `%fv'
   from "%f0"

   using, adapted to OS4, CatComp.sd 1.2 (24.09.1999)

   Do NOT edit by hand!

****************************************************************/

#ifndef %b_STRINGS_H
#define %b_STRINGS_H

#ifndef EXEC_TYPES_H
#include <exec/types.h>
#endif

#ifdef  %b_BASIC_CODE
#undef  %b_BASIC
#undef  %b_CODE
#define %b_BASIC
#define %b_CODE
#endif

#ifdef  %b_BASIC
#undef  %b_ARRAY
#undef  %b_BLOCK
#define %b_ARRAY
#define %b_BLOCK
#endif

#ifdef  %b_ARRAY
#undef  %b_NUMBERS
#undef  %b_STRINGS
#define %b_NUMBERS
#define %b_STRINGS
#endif

#ifdef  %b_BLOCK
#undef  %b_STRINGS
#define %b_STRINGS
#endif


#ifdef %b_CODE
//#include <proto/locale.h>
//extern struct Library *LocaleBase;
#ifndef PROTO_LOCALE_H
 #ifndef __NOLIBBASE__
  #define _NLB_DEFINED_
  #define __NOLIBBASE__
 #endif
 #ifndef __NOGLOBALIFACE__
  #define _NGI_DEFINED_
  #define __NOGLOBALIFACE__
 #endif
 #include <proto/locale.h>
 #ifdef _NLB_DEFINED_
  #undef __NOLIBBASE__
  #undef _NLB_DEFINED_
 #endif
 #ifdef _NGI_DEFINED_
  #undef __NOGLOBALIFACE__
  #undef _NGI_DEFINED_
 #endif
#endif

struct LocaleInfo
{
#ifndef __amigaos4__
    struct Library     *li_LocaleBase;
#else
    struct LocaleIFace *li_ILocale;
#endif
    struct Catalog     *li_Catalog;
};
#endif

#ifdef %b_NUMBERS

#define %i %d

#endif /* %b_NUMBERS */


/****************************************************************************/


#ifdef %b_STRINGS

#define %i_STR %s

#endif /* %b_STRINGS */


/****************************************************************************/


#ifdef %b_ARRAY

struct %b_ArrayType
{
    LONG   cca_ID;
    STRPTR cca_Str;
};

static const struct %b_ArrayType %b_Array[] =
{
    { %i, (STRPTR)%i_STR },
};


#endif /* %b_ARRAY */


/****************************************************************************/


#ifdef %b_BLOCK

static const char %b_Block[] =
{

     "%4a" "%2t"\n    %i_STR "%z"

};

#endif /* %b_BLOCK */


/****************************************************************************/


#ifdef %b_CODE

#ifndef %b_CODE_EXISTS
 #define %b_CODE_EXISTS

 STRPTR Get%bString(struct LocaleInfo *li, LONG stringNum)
 {
#ifndef __amigaos4__
    struct Library     *LocaleBase = li->li_LocaleBase;
#else
    struct LocaleIFace *ILocale    = li->li_ILocale;
#endif
 LONG   *l;
 UWORD  *w;
 STRPTR  builtIn;

     l = (LONG *)%b_Block;

     while (*l != stringNum)
       {
       w = (UWORD *)((ULONG)l + 4);
       l = (LONG *)((ULONG)l + (ULONG)*w + 6);
       }
     builtIn = (STRPTR)((ULONG)l + 6);

// #define %b_XLocaleBase LocaleBase
// #define LocaleBase li->li_LocaleBase

#ifndef __amigaos4__
     if(LocaleBase && li)
        return(GetCatalogStr(li->li_Catalog, stringNum, builtIn));
#else
    if (ILocale)
    {
#ifdef __USE_INLINE__
        return GetCatalogStr(li->li_Catalog, stringNum, builtIn);
#else
        return ILocale->GetCatalogStr(li->li_Catalog, stringNum, builtIn);
#endif
    }
#endif
// #undef  LocaleBase
// #define LocaleBase XLocaleBase
// #undef  %b_XLocaleBase

     return(builtIn);
 }

#else

 STRPTR Get%bString(struct LocaleInfo *li, LONG stringNum);

#endif /* %b_CODE_EXISTS */

#endif /* %b_CODE */


/****************************************************************************/


#endif /* %b_STRINGS_H */
